;
; controlTM1637.asm
;
; Created: 4/12/2020 11:11:35
; Author : Angel Orellana
; ESTE PROGRAMA ES UN EJERCICIO PARA IMPLEMENTAR UNA COMUNICACION VIA SOFTWARE CON 
; UN MODULO DE DISPLAY 7 SEGMENTOS 4 DIGITOS QUE USA EL INTEGRADO TM1637 COMO CONTROLADOR

;PINES QUE SERAN USADOS COMO RELOJ Y COMO DATOS
.EQU CLK = 0
.EQU DATA = 1
.EQU ADR_AUTO = 0x40 ;DIRECCIONAMIENTO AUTOMANTIOC ESCRITURA DE DATOS Y MODO NORMAL
.EQU DIR_INI = 0xC0 ;INICIA EN LA DIRECCION C0 
.DSEG ;DATOS
;------------ USADOS EN LAS FUNCIONES DE ENVIO DE DATOS -----------------
SEG1: .BYTE 1 ;VARIABLE USADA PARA ASIGNAR EL DATO A ENVIAR
SEG2: .BYTE 1
SEG3: .BYTE	1
SEG4: .BYTE 1 ;VARIABLES QUE SE USAN PARA ENVIAR LOS DATOS
.CSEG 
.ORG 0x0000
	RJMP CONFIGURACION
.ORG 0x0005
	RJMP ISR_TMR0
TABLE:.DB  0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f
CONFIGURACION:
	;SE CONFIGURA EL APUNTADOR PARA LA TABLA
	LDI	ZH, HIGH(TABLE*2)
	LDI ZL, LOW(TABLE*2) ;SE CARGAN LOS BYTES LOW Y HIGH DE TABLE

LOOP:
	RCALL CONF_IO_DISPLAY
	LPM ;SE CARGA A R0 EL VALOR DE 0 PARA EL DISPLAY
	STS SEG1, R0
	STS	SEG2, R0
	STS SEG3, R0
	STS SEG4, R0
	RCALL DISPLAY
	RJMP LOOP


DISPLAY:
	;EN ESTA RUTINA SE ENVIA EL COMANDO, Y LOS DATOS NECESARIOS A MOSTRAR
	LDI R16, ADR_AUTO ;SE CARGA EL COMANDO PARA LA ESCRITURA
	RCALL START
	RCALL SEND
	RCALL STOP

	LDI	 R16, DIR_INI ;DIRECCION INICIAL DE DATOS EN EL TN1637
	RCALL START
	RCALL SEND
	LDS	R16, SEG1
	RCALL SEND
	LDS	R16, SEG2
	RCALL SEND
	LDS	R16, SEG3
	RCALL SEND
	LDS	R16, SEG4
	RCALL SEND
	RCALL	STOP ;FIN DE LOS DATOS

	;SE CONFIGURA EL BRILLO
	LDI	R16, 0x8A ;
	RCALL START
	RCALL SEND
	RCALL STOP
	RET ;SE DETIENE

CONF_IO_DISPLAY:
	;SE CONFIGURAN LAS LINEAS DE DATOS:
	SBI	DDRB, CLK
	SBI DDRB, DATA ;SE COLOCAN EN 1 LOS PINES DE DATOS Y CLOCK
	RET

START:
	SBI	PORTB, CLK
	SBI	PORTB, DATA
	CBI	PORTB, DATA
	CBI	PORTB, CLK
	RET

STOP:
	CBI	PORTB, CLK
	CBI	PORTB, DATA
	SBI	PORTB, CLK
	SBI	PORTB, DATA
	RET	

SEND:
	;SE USARA EL REGISTRO R16 PARA ENVIAR LOS DATOS Y R17 COMO VALOR DE CONTADOR
	CLR	R17 ;SE COLOCA EN 0 EL VALOR DE R17
	CICLE:
	CPI R17, 8
	BREQ WAIT_FOR_ACK ;SI R17 ES 8 SE VA A LA ETIQUETA INDICADA
	;------------- SIGUE AQUI SI NO HAN PASADO 8 BITS ------------
	CBI	PORTB, CLK ;SE COLOCA EN 0
	SBRC R16, 0 ; SE SALTA LA INSTRUCCION SI EL BIT ES 0
	RJMP ONE
	;-------- SI ES CERO SE EJECUTA AQUI -------------------------
	CBI	PORTB, DATA
	RJMP CONTINUE
	
	ONE: 
	SBI	PORTB, DATA

	CONTINUE:
	;-------- AQUI SE HACEN LOS PREPARATIVOS PARA EL SIGUIENTE BIT------
	SBI	PORTB, CLK ;SE COLOCA EN 1 EL RELOJ 
	LSR	R16 ;SHIFT LOGICO A LA DERECHA
	INC R17 ;SE INCREMENTA 
	NOP
	NOP
	RJMP CICLE ;CONTINUA CON EL SIGUIENTE BIT
	WAIT_FOR_ACK:
	CBI	PORTB, CLK
	CBI DDRB, DATA ;SE COLOCA COMO ENTRADA
	SBI	PORTB, CLK
	NOP
	NOP
	SBI	DDRB, DATA ;SE COLOCA COMO ENTRADA DE NUEVO
	CBI	PORTB, DATA ;SE COLOCA EN CERO
	RET ;FIN DEL ENVIO DE DATOS


	



		
ISR_TMR0:

